***[Prioridad 1]
1- Sistema para recordar el estado del sistema ante cualquier falla del sistema o de la luz

*** [Prioridad 2]
2- Growers
2.1- Level msg Grower. Revisar
2.2- Corregir Alto Consumo de CPU cuando no hay internet
2.3- Corregir problema de conexión a internet cuando las credenciales del internet se añaden por medio de
AP (Access Point).
2.4- Añadir try/except a cada cámara térmica por separado. Agregar variables necesesarias para 
2.6- Manejar desconexión cámara normal. Mismo caso que las térmicas
2.7- ¿Por qué están fallando? Problema de alimentación revisar cables y fuentes que funcionen correctamente antes de
instalar
2.7.1 Fuente de alimentación a 5.25Vmáximo, 5.20 mínimo
2.7.2 Cables usb de cobre
2.7.3
2.8 Revisar variables, funciones. Ajustar para nuevo tocani
2.9 Correr pruebas con todos los comandos MQTT y verificar que funciones
Finally: Actualizar código en todos los tocanis. Instalar nuevas dependencias: coloredlogs.
Probar individualmente antes de insertar.

[Prioridad 3]
3- Problema Aire en tuberías cuando hay cambios de solución y error estimación kegs H2O
3.1 Definir problemática
3.2 Proponer soluciones y analizar su viabilidad
3.3 Definir pasos subsecuentes

[Prioridad 5]
5- Modificación log
5.1 Numeración a errores y mensajes
5.2 Integración errores críticos que requieran asistencia del operador

[Prioridad 6]
6- Showroom Backend
6-1 Identificación de msj importantes en log
6-2 Actualización de parámetros en clase state
6-3 Cambiar contador 1s por condición con datetime.second

[Prioridad 7]
7- Reconectar fines de carrera
7.1- Verificar que todos funcionan
7.2- Verificar que no alteran el funcionamiento del sistema por estar conectados

[Prioridad 8]
8- Envío de correos y msg Telegram eventos (peligrosos, importantes)
Nota: Tener cuidado en caso de no tener internet se pierden entre 15-20s
cada intento de mandar un correo hasta que falla.

[Prioridad 9]
9- Alertas y Recordatorios
9.1 Recordatorios (Diarios, Semanales, Quincenales y Mensuales)
- Drenar compresor, etc. Integrar con correos, Telegram y log en pantalla
9.2 Contadores de tiempo para rastrear cuando el programa duré demasiado en un mismo
estado. Movimiento de agua con bombas, comprimiendo aire, etc.
9.2.1 Definir tiempos de espera razonables para cada estado
9.3 Integrar con envío de correos y msg Telegram

[Prioridad 10]
10- Problemas en la frontera (cambios de solución)
10.1 ¿Qué pasa si tocaba cambio de solución y llenó con la antigua solución?
Solicitar cambio de solución adelantada en caso de que los litros requeridos para
rellenar el kegs sean 0

[Prioridad 11]
11- ¿Por qué al irse la luz y regresar dejo de escribir el log el sistema?

[Prioridad 12]
12- Aumento en el consumo del CPU desconocido. Posible actualización de mosquitto

[Prioridad 20]
20- Análisis de datos
20.1 Incluir en base de datos caudales, consumos de agua por etapa
20.2 Incluir en base de datos agua consumida por el sistema desde la línea externa
20.3 Comenzar filtrado, selección de datos
20.4 Graficar resultados preeliminares
20.5 Robustecer captura y pre-procesamiento con resultados

[Prioridad 100]
100- Añadir exportación e importación de csv con parámetros de funcionamiento
guardados

[Prioridad 1000]
1000- Control de Clima Inteligente (Aire Acondicionado, ventiladores)

[Prioridad 2000]
2000- Integración sMaker con función completa

[Prioridad 3000]
3000- Problema de volumen recirculado 
Descripción: Cuando 2 bombas trabajan sobre la misma solución, quien determina cuanto volumen se ha movido es
el sensor de nivel, debido a los flujos no es posible determinar con exactitud la cantidad de litros que se han
movido.
Solución: Para resolver por completo este problema es necesario la instalación de un caudalímetro o algún otro
sensor que ayude a determinar cuantos litros han entrado a recirculado, y contrastar esa información con todos
los sensores ultrasónicos.

*** Status: A prueba
**  Pendiente de cargar y de hacer commit en git
*   Pendiente de cargar